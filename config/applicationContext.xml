<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- General System configuration properties -->
	<bean id="properties"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:system.properties</value>
				<value>classpath:log4j.properties</value>
				<value>classpath:database.properties</value>
			</list>
		</property>
	</bean>

	<bean id="sysPropsResource"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location" value="classpath:system.properties"></property>
	</bean>

	<!-- Jetty configuration -->
	<import resource="jetty.xml" />

	<!-- Database related configuration -->
	<import resource="datasource.xml" />

	<!-- SMPP bean -->
	<bean id="messageRouter" class="com.peoplecloud.smpp.api.SMSMultipleSessionRouter"
		init-method="initialize">
		<constructor-arg ref="sysPropsResource"></constructor-arg>
		<property name="velocityEmailSenderService" ref="velocityEmailSenderService"></property>
	</bean>

	<!-- REST Services -->
	<bean id="smsRestAPIService" name="smsRestAPIService"
		class="com.peoplecloud.smpp.api.SMSRestAPI" init-method="initialize">

		<constructor-arg value="SMS REST API INTERFACE"></constructor-arg>

		<property name="messageRouter" ref="messageRouter"></property>
		<property name="dbPersistanceService" ref="dbPersistanceService"></property>
		<property name="smsCallbackService" ref="smsCallbackService"></property>
	</bean>

	<bean id="securityInterceptor" name="securityInterceptor"
		class="com.peoplecloud.smpp.api.RestSecurityInterceptor">

		<property name="userDao" ref="userDao"></property>
	</bean>

	<!-- Database Services -->
	<bean id="dbPersistanceService" class="com.peoplecloud.smpp.service.MessagePersistanceService">
		<property name="msgDAO" ref="msgDAO"></property>
	</bean>
	<bean id="smsCallbackService" class="com.peoplecloud.smpp.service.SMSCallbackService">
		<property name="callbackDAO" ref="callbackDAO"></property>
	</bean>

	<!-- Data Access Objects -->
	<bean id="userDao" class="com.peoplecloud.smpp.dao.UserDAO"></bean>
	<bean id="msgDAO" class="com.peoplecloud.smpp.dao.MessageDAO"></bean>
	<bean id="callbackDAO" class="com.peoplecloud.smpp.dao.SMSCallbackDAO"></bean>

	<!-- Email Templates -->
	<bean id="velocityEmailSenderService" class="com.peoplecloud.smpp.utils.VelocityEmailSender">
		<property name="velocityEngine" ref="velocityEngine"></property>
		<property name="mailerService" ref="mailerService"></property>
		<property name="sysPropsResource" ref="sysPropsResource"></property>
	</bean>

	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="velocityProperties">
			<value>
				resource.loader=class
				class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
			</value>
		</property>
	</bean>

	<bean id="mailerService" class="org.springframework.mail.javamail.JavaMailSenderImpl"
		scope="singleton">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="465" />
		<property name="username" value="automailer@peoplecloudss.com" />
		<property name="password" value="testing!@#$" />
		<property name="javaMailProperties">
			<value>
				mail.debug=false
				mail.smtp.auth=true
				mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
				mail.smtp.socketFactory.fallback=false
			</value>
		</property>
	</bean>
</beans>